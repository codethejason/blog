<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Virtual Machine on Jason&#39;s Google Code-in Blog</title>
    <link>http://codethejason.github.io/blog/tags/virtual-machine/</link>
    <description>Recent content in Virtual Machine on Jason&#39;s Google Code-in Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jan 2016 17:16:25 -0500</lastBuildDate>
    <atom:link href="http://codethejason.github.io/blog/tags/virtual-machine/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Exploring Docker</title>
      <link>http://codethejason.github.io/blog/docker/</link>
      <pubDate>Fri, 01 Jan 2016 17:16:25 -0500</pubDate>
      
      <guid>http://codethejason.github.io/blog/docker/</guid>
      <description>&lt;p&gt;I have always seen Docker being talked about in the Linux community and have seen it as one of the DigitalOcean quick app install options. I had no idea what it was and did not realize it&amp;rsquo;s function. &lt;a href=&#34;https://www.docker.com/what-docker&#34;&gt;Docker&lt;/a&gt; is actually a container technology designed to improve efficiency. Traditional virtual machines house their own guest operating system and libraries to run an application. As one can see, if there is a large number of virtual machines running their own operating system, the workflow is inefficient. Docker combines the operating systems and other shared parts, so a low spec server could be running hundreds of containers without a hitch. Docker also makes collaboration and publishing easier since it creates a common framework for people to work together and scales easily.&lt;/p&gt;

&lt;p&gt;Docker has a few tools in its Toolbox to help with development. &lt;a href=&#34;https://www.docker.com/docker-compose&#34;&gt;Docker Compose&lt;/a&gt; is a tool used for running small parts of application on different containers while treating it as a single application. There is no need to manage each and every separate container. &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt; makes host creation easier by automatically configuring Docker on the hosts. &lt;a href=&#34;https://www.docker.com/docker-swarm&#34;&gt;Docker Swarm&lt;/a&gt; is exactly what it sounds like; it provides clustering capabilities to manage a whole swarm of Docker Engines in a since Docker Engine.&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;installation&lt;/a&gt; to be a little bit frustrating because I could not get Docker to work on one of my Windows computers. When I tried to ask for help, there was virtually nobody active on the IRC. I proceeded to install Docker on another computer without a problem. I made a 3rd tier application (talks to database) that connects to MySQL &lt;a href=&#34;https://github.com/codethejason/gcismallprojects2015/tree/master/simpleDockerApp&#34;&gt;here&lt;/a&gt; and ran it on a Docker container.&lt;/p&gt;

&lt;p&gt;By the way, Happy New Year!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-dZ7-CqEkHhU/VJ6dGmIHCHI/AAAAAAAAH28/eYAWdPY_XM0/w350/Happy-New-Year.png&#34; alt=&#34;hny&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup FOSSASIA&#39;s Orga Server</title>
      <link>http://codethejason.github.io/blog/setuporgaserver/</link>
      <pubDate>Wed, 23 Dec 2015 19:18:08 -0500</pubDate>
      
      <guid>http://codethejason.github.io/blog/setuporgaserver/</guid>
      <description>

&lt;p&gt;Today, I will be teaching you how to locally setup the &lt;a href=&#34;https://github.com/fossasia/open-event-orga-server&#34;&gt;open event orga server&lt;/a&gt; which manages all the data of an event. I will let you know the exact process I went through.&lt;/p&gt;

&lt;h5 id=&#34;step-1-fork-and-clone-the-repository:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 1: Fork and clone the repository&lt;/h5&gt;

&lt;p&gt;Make sure you clone the repository from &lt;a href=&#34;https://github.com/fossasia/open-event-orga-server&#34;&gt;Github&lt;/a&gt; into your default folder. You should also fork the repository if you are thinking of contributing to it. Cloning the repository first is much easier since there is a preset &lt;em&gt;Vagrantfile&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/clonerepo.png&#34; alt=&#34;clone repository&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;step-2-install-vagrant-and-virtualbox:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 2: Install Vagrant and VirtualBox&lt;/h5&gt;

&lt;p&gt;At this point, go to &lt;a href=&#34;http://vagrantup.com&#34;&gt;Vagrant&lt;/a&gt; and install the latest version. Afterwards, navigate to &lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;VirtualBox&lt;/a&gt; to install VirtualBox 5 for Windows. Restart your computer after the installation.&lt;/p&gt;

&lt;h5 id=&#34;step-3-set-up-box-and-connect-to-it:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 3: Set up Box and connect to it&lt;/h5&gt;

&lt;p&gt;Go to your command prompt and type in &lt;code&gt;vagrant up&lt;/code&gt; in the open event orga directory to initialize the setup process. The default operating system is Ubuntu Trusty LTS (you can use another OS if you would like). Nevertheless, you should see this after running the &lt;code&gt;vagrant up&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/vagrantup.png&#34; alt=&#34;clone repository&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After waiting three to ten minutes, your virtual machine will be ready. Go into an ssh client (for example &lt;a href=&#34;http://www.putty.org/&#34;&gt;PuTTy&lt;/a&gt;) and login to the server using the following credentials:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host: localhost or 127.0.0.1
port: 2222
username: vagrant
password: vagrant
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Navigate to &lt;em&gt;/vagrant&lt;/em&gt; by typing in &lt;code&gt;cd /vagrant&lt;/code&gt;. You should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/consolewindow.png&#34; alt=&#34;window&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;step-4-install-open-orga-server:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 4: Install Open Orga Server&lt;/h5&gt;

&lt;p&gt;To avoid confusion, exit out of any command prompts. At any point, if you want to shut down the VM, type &lt;code&gt;vagrant halt&lt;/code&gt; in the open orga server directory.&lt;br /&gt;
Now, create the python database given in the &lt;em&gt;create_db.py&lt;/em&gt; file and start the Nginx server by running these commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python create_db.py
python manage.py runserver -h 0.0.0.0 -p 5000
#Address is 0.0.0.0 so the app binds to the public ips on the box (for accessing it on our machine)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are done! View the web application at &lt;a href=&#34;localhost:8001&#34;&gt;localhost:8001&lt;/a&gt; on your desktop. If you would like to keep the app running, you can install screen and use it to keep it in the background even while you are not on the VM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/finished.png&#34; alt=&#34;window&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;troubleshooting:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;One issue I had was that I was stuck on this screen for a while:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/stuck.png&#34; alt=&#34;stuck&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To fix it, you must restart your computer and boot into BIOS (usually by function keys or a special power button on the computer). Afterwards, select virtualization and enable it.&lt;/p&gt;

&lt;p&gt;Other than that, I did not have any issues deploying the application. Be sure to have the latest versions of Vagrant and Virtualbox and you will be able to finish installing the server successfully. Good luck on your installation and have a blast contributing!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>