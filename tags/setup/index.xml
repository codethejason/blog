<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Setup on Jason&#39;s Google Code-in Blog</title>
    <link>http://codethejason.github.io/blog/tags/setup/</link>
    <description>Recent content in Setup on Jason&#39;s Google Code-in Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Dec 2015 19:18:08 -0500</lastBuildDate>
    <atom:link href="http://codethejason.github.io/blog/tags/setup/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Setup FOSSASIA&#39;s Orga Server</title>
      <link>http://codethejason.github.io/blog/setuporgaserver/</link>
      <pubDate>Wed, 23 Dec 2015 19:18:08 -0500</pubDate>
      
      <guid>http://codethejason.github.io/blog/setuporgaserver/</guid>
      <description>

&lt;p&gt;Today, I will be teaching you how to locally setup the &lt;a href=&#34;https://github.com/fossasia/open-event-orga-server&#34;&gt;open event orga server&lt;/a&gt; which manages all the data of an event. I will let you know the exact process I went through.&lt;/p&gt;

&lt;h5 id=&#34;step-1-fork-and-clone-the-repository:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 1: Fork and clone the repository&lt;/h5&gt;

&lt;p&gt;Make sure you clone the repository from &lt;a href=&#34;https://github.com/fossasia/open-event-orga-server&#34;&gt;Github&lt;/a&gt; into your default folder. You should also fork the repository if you are thinking of contributing to it. Cloning the repository first is much easier since there is a preset &lt;em&gt;Vagrantfile&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/clonerepo.png&#34; alt=&#34;clone repository&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;step-2-install-vagrant-and-virtualbox:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 2: Install Vagrant and VirtualBox&lt;/h5&gt;

&lt;p&gt;At this point, go to &lt;a href=&#34;http://vagrantup.com&#34;&gt;Vagrant&lt;/a&gt; and install the latest version. Afterwards, navigate to &lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;VirtualBox&lt;/a&gt; to install VirtualBox 5 for Windows. Restart your computer after the installation.&lt;/p&gt;

&lt;h5 id=&#34;step-3-set-up-box-and-connect-to-it:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 3: Set up Box and connect to it&lt;/h5&gt;

&lt;p&gt;Go to your command prompt and type in &lt;code&gt;vagrant up&lt;/code&gt; in the open event orga directory to initialize the setup process. The default operating system is Ubuntu Trusty LTS (you can use another OS if you would like). Nevertheless, you should see this after running the &lt;code&gt;vagrant up&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/vagrantup.png&#34; alt=&#34;clone repository&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After waiting three to ten minutes, your virtual machine will be ready. Go into an ssh client (for example &lt;a href=&#34;http://www.putty.org/&#34;&gt;PuTTy&lt;/a&gt;) and login to the server using the following credentials:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host: localhost or 127.0.0.1
port: 2222
username: vagrant
password: vagrant
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Navigate to &lt;em&gt;/vagrant&lt;/em&gt; by typing in &lt;code&gt;cd /vagrant&lt;/code&gt;. You should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/consolewindow.png&#34; alt=&#34;window&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;step-4-install-open-orga-server:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Step 4: Install Open Orga Server&lt;/h5&gt;

&lt;p&gt;To avoid confusion, exit out of any command prompts. At any point, if you want to shut down the VM, type &lt;code&gt;vagrant halt&lt;/code&gt; in the open orga server directory.&lt;br /&gt;
Now, create the python database given in the &lt;em&gt;create_db.py&lt;/em&gt; file and start the Nginx server by running these commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python create_db.py
python manage.py runserver -h 0.0.0.0 -p 5000
#Address is 0.0.0.0 so the app binds to the public ips on the box (for accessing it on our machine)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are done! View the web application at &lt;a href=&#34;localhost:8001&#34;&gt;localhost:8001&lt;/a&gt; on your desktop. If you would like to keep the app running, you can install screen and use it to keep it in the background even while you are not on the VM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/finished.png&#34; alt=&#34;window&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;troubleshooting:05b9736d8424bfbd20ee3035f5b847da&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;One issue I had was that I was stuck on this screen for a while:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../setuporgaimages/stuck.png&#34; alt=&#34;stuck&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To fix it, you must restart your computer and boot into BIOS (usually by function keys or a special power button on the computer). Afterwards, select virtualization and enable it.&lt;/p&gt;

&lt;p&gt;Other than that, I did not have any issues deploying the application. Be sure to have the latest versions of Vagrant and Virtualbox and you will be able to finish installing the server successfully. Good luck on your installation and have a blast contributing!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup Hugo on Github Pages</title>
      <link>http://codethejason.github.io/blog/setupghpages/</link>
      <pubDate>Thu, 17 Dec 2015 23:12:09 -0500</pubDate>
      
      <guid>http://codethejason.github.io/blog/setupghpages/</guid>
      <description>

&lt;p&gt;At this point, you might be wondering how users can easily see your blog content without downloading the repository and doing all the steps you had to take to view your posts. This is done by publishing on &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt;, a free service offered by Github that hosts static webpages. We can create a static website by publishing all our posts. I will be using lots of content from the &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Hugo site&lt;/a&gt;, so this tutorial is very similar.&lt;/p&gt;

&lt;h5 id=&#34;step-1-modify-config-toml-file:4f462177fbb182d324a56341526983da&#34;&gt;Step 1: Modify config.toml file&lt;/h5&gt;

&lt;p&gt;We must first append some lines to the configuration file to tell Hugo that we want to publish the site. Append the following lines to your existing file from the last tutorial:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;contentdir = &amp;quot;content/post&amp;quot;
layoutdir = &amp;quot;layouts&amp;quot;
publishdir = &amp;quot;public&amp;quot;
canonifyurls = true
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;step-2-setup-git-to-work:4f462177fbb182d324a56341526983da&#34;&gt;Step 2: Setup Git to Work&lt;/h5&gt;

&lt;p&gt;I borrowed this part from the official Hugo site. It is extremely comprehensive and not much more can be added. Make sure to perform these commands in order in &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git Bash&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Create a new orphand branch (no commit history) named gh-pages
git checkout --orphan gh-pages

# Unstage all files
git rm --cached $(git ls-files)

# Grab one file from the master branch so we can make a commit
git checkout master README.md

# Add and commit that file
git add .
git commit -m &amp;quot;INIT: initial commit on gh-pages branch&amp;quot;

# Push to remote gh-pages branch
git push origin gh-pages

# Return to master branch
git checkout master

# Remove the public folder to make room for the gh-pages subtree
rm -rf public

# Add the gh-pages branch of the repository. It will look like a folder named public
git subtree add --prefix=public https://github.com/[github username]/blog.git gh-pages --squash

# Pull down the file we just committed. This helps avoid merge conflicts
git subtree pull --prefix=public https://github.com/[github username]/blog.git gh-pages

# Run hugo. Generated site will be placed in public directory
hugo


# Add everything
git add -A

# Commit and push to master
git commit -m &amp;quot;Updating site&amp;quot; &amp;amp;&amp;amp; git push origin master

# Push the public subtree to the gh-pages branch
git subtree push --prefix=public https://github.com/[github username]/blog.git gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be sure to be signed in to avoid any authentication problems.&lt;/p&gt;

&lt;h5 id=&#34;step-3-create-deploy-sh-file:4f462177fbb182d324a56341526983da&#34;&gt;Step 3: Create deploy.sh file&lt;/h5&gt;

&lt;p&gt;This deploy.sh file will make deploying blog posts a lot easier in the future. Since Windows does not support shell scripts, we must run the script in Git Bash. The usage of this script is &lt;code&gt;bash deploy.sh &amp;quot;&amp;lt;my commit msg&amp;gt;&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project.
hugo

# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master
git subtree push --prefix=public https://github.com/[github username]/blog.git gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it! Enjoy your new blog that&amp;rsquo;s secure and easy to use.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup a Blog using Hugo on Windows</title>
      <link>http://codethejason.github.io/blog/welcome/</link>
      <pubDate>Wed, 16 Dec 2015 22:26:09 -0500</pubDate>
      
      <guid>http://codethejason.github.io/blog/welcome/</guid>
      <description>

&lt;p&gt;Today, I created a blog with the Hugo static website generator, an engine very similar to Jekyll. Hugo allows a user to easily setup a secure and customizable blog in a short period of time. It is open source and constantly updated to ensure the latest features and bug fixes.&lt;/p&gt;

&lt;p&gt;Setting up Hugo is a piece of cake, even on Windows. First, I recommend watch the &lt;a href=&#34;http://gohugo.io/overview/quickstart/&#34;&gt;quickstart guide&lt;/a&gt;. It is extremely informative and got me setup in less than ten minutes.&lt;/p&gt;

&lt;h5 id=&#34;step-1-install-hugo:2cc7dc244eed4480e8b46c91e911e96b&#34;&gt;Step 1: Install Hugo&lt;/h5&gt;

&lt;p&gt;To install Hugo and access it from the command prompt, first scroll down to the bottom of the &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;releases&lt;/a&gt; and download the appropriate executable. After unzipping the file, rename the file name to &lt;strong&gt;hugo.exe&lt;/strong&gt;. Navigate to your &lt;em&gt;AppData\Roaming&lt;/em&gt; (access it by typing in &lt;em&gt;%appdata%&lt;/em&gt; in the &lt;em&gt;Windows + R&lt;/em&gt; dialog) in Windows Explorer and create a new folder called &lt;strong&gt;hugo&lt;/strong&gt;, and copy the binary inside the folder. In the run dialog, type in &lt;code&gt;rundll32 sysdm.cpl,EditEnvironmentVariables&lt;/code&gt; to access the system variables. Under the user variables, edit the variable that says &lt;em&gt;PATH&lt;/em&gt; by appending a semicolon and the location of the hugo folder in appdata. After saving, you are now ready to run hugo on the command line.&lt;/p&gt;

&lt;h5 id=&#34;step-2-configure-hugo:2cc7dc244eed4480e8b46c91e911e96b&#34;&gt;Step 2: Configure Hugo&lt;/h5&gt;

&lt;p&gt;Create a folder in a location of your choice. Type in the following commands in order:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd C:\&amp;lt;Your file location&amp;gt;
mkdir hugo
cd hugo
hugo new site
hugo new firstpost.md
git clone --depth 1 --recursive https://github.com/pdevty/material-design themes/material-design
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to install other themes, feel free to &lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;check them out&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Edit the &lt;em&gt;config.toml&lt;/em&gt; file to say this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseURL =&amp;quot;Your URL&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;Your Name&#39;s Blog&amp;quot;
theme = &amp;quot;material-design&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;step-3-run-hugo:2cc7dc244eed4480e8b46c91e911e96b&#34;&gt;Step 3: Run Hugo&lt;/h6&gt;

&lt;p&gt;Now, you can add any content below the plus signs to your new markdown file located at &lt;em&gt;content/posts/firstpost.md&lt;/em&gt; in your favorite text editor. The formatting is markdown, which you can read about on &lt;a href=&#34;https://help.github.com/articles/markdown-basics/&#34;&gt;Github&lt;/a&gt;. Remove the &lt;code&gt;draft = true&lt;/code&gt; statement on top of the page and run &lt;code&gt;hugo server&lt;/code&gt; to generate your content. Your content will be available on &lt;strong&gt;localhost:1313&lt;/strong&gt; in your browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://puu.sh/lYxNn/a7dbbbe8c3.jpg&#34; width=&#34;300&#34; alt=&#34;Final Result&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>